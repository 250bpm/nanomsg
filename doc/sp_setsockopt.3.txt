sp_setsockopt(3)
================

NAME
----
sp_setsockopt - set a socket option


SYNOPSIS
--------
*#include <sp/sp.h>*

*int sp_setsockopt (int 's', int 'level', int 'option', const void '*optval', size_t 'optvallen');*


DESCRIPTION
-----------
Sets the value of the 'option'. The 'level' argument specifies the protocol
level at which the option resides. For generic socket-level options use
_SP_SOL_SOCKET_ level. For socket-type-specific options use socket type
for 'level' argument (e.g. _SP_SUB_). For transport-specific options use ID of
the transport as the 'level' argument (e.g. _SP_TCP_).

The new value is pointed to by 'optval' argument. Size of the option is specified
by the 'optvallen' argument.

_<sp/sp.h>_ header defines generic socket-level options (_SP_SOL_SOCKET_ level).
The options are as follows:

*SP_LINGER*::
    Option type is int. Default is 1000.
*SP_SNDBUF*::
    Option type is int. Default is 128kB.
*SP_RCVBUF*::
    Option type is int. Default is 128kB.
*SP_SNDTIMEO*::
    The timeout for send operation on the socket, in milliseconds. If message
    cannot be sent within the specified timeout, EAGAIN error is returned.
    Value of -1 means infinite timeout. The type of the option is int.
    Default value is -1.
*SP_RCVTIMEO*::
    The timeout for recv operation on the socket, in milliseconds. If message
    cannot be received within the specified timeout, EAGAIN error is returned.
    Value of -1 means infinite timeout. The type of the option is int.
    Default value is -1.
*SP_RECONNECT_IVL*::
    Option type is int. Default is 100.
*SP_RECONNECT_IVL_MAX*::
    Option type is int. Default is 0.


RETURN VALUE
------------
If the function succeeds zero is returned. Otherwise, negative number is
returned and 'errno' is set to to one of the values defined below.


ERRORS
------
*EFAULT*::
The library is not initialised.
*EBADF*::
The provided socket is invalid.
*ENOPROTOOPT*::
The option is unknown at the level indicated.
*EINVAL*::
The specified option value is invalid.
*ETERM*::
The library is terminating.

EXAMPLE
-------

----
int linger = 1000;
sp_setsockopt (s, SOL_SP, SP_LINGER, &linger, sizeof (linger));
sp_setsockopt (s, SP_SUB, SP_SUBSCRIBE, "ABC", 3);
----


SEE ALSO
--------
linknanomsg:sp_socket[3]
linknanomsg:sp_getsockopt[3]
linknanomsg:nanomsg[7]

AUTHORS
-------
Martin Sustrik <sustrik@250bpm.com>

